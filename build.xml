<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- 

Copyright (c) 2019 Infostretch Corporation

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

For any inquiry or need additional information, please contact support-qaf@infostretch.com

-->

<project basedir="." default="test" name="QMetryAutomationFramework" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <available file="../common-build-tasks.xml" property="common-build-tasks.present"/>
	<get src="https://raw.githubusercontent.com/qmetry/qaf-parent/master/common-build-tasks.xml" dest="../common-build-tasks.xml" unless:true="${common-build-tasks.present}" skipexisting="true"/>
	
	<import file="../common-build-tasks.xml" optional="false"/>
	
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- ================================= target: resolve ================================= -->
	<target name="resolve" description="--> retrieve dependencies with ivy" depends="install-ivy, load-setting">


		<ivy:resolve file="ivy.xml" />
		<ivy:cachepath pathid="lib.path.id" />


		<ivy:addpath topath="build.classpath">
			<path refid="lib.path.id" />
		</ivy:addpath>
		<ivy:cachepath pathid="compile.path" conf="compile,provided" />
		<ivy:cachepath pathid="test.path" conf="test,provided" />
	</target>

	<target name="compile" depends="init">
		<taskdef classpathref="build.classpath" resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" />

		<echo level="info">--- compile (start) ---</echo>
		<iajc source="${source}" target="${target}" showweaveinfo="true" verbose="true" destdir="${bin.dir}" debug="false">
			<inpath location="${src.dir}">
			</inpath>
			<sourceroots>
				<pathelement location="${src.dir}" />
			</sourceroots>
			<classpath refid="build.classpath">
			</classpath>
		</iajc>
		<echo level="info">--- compile (finished) ---</echo>
	</target>
	<!-- ================================= target: build ================================= -->
	<target name="build" depends="make-jar, gendoc,gensource" description="build framework, generate docs">


	</target>



	<target name="make-jar" depends="clean, compile" description="build basic version">

		<mkdir dir="${dist.dir}" />
		<!-- All - core + testNG + step -->
		<jar destfile="${dist.dir}/qaf.jar" basedir="${bin.dir}" excludes="**/test/**,**/step/CommonStep.*" includes="**/*.*">
			<metainf dir="." includes="LICENSE.txt,NOTICE.txt" />
			<manifest>
				<attribute name="Vendor" value="Infostretch Corp." />
				<attribute name="Built-By" value="${user.name}" />

				<section name="Build-Info">
					<attribute name="qaf-Build-Time" value="${build.timestamp}" />
					<!-- Information about the program itself -->
					<attribute name="qaf-Version" value="${version-num}" />
					<attribute name="qaf-Revision" value="${build-num}" />
					<attribute name="qaf-Type" value="core" />
				</section>
			</manifest>
			<metainf dir="${src.dir}" includes="**/aop.xml" />
			<service type="org.testng.ITestNGListener">
				<provider classname="com.qmetry.qaf.automation.testng.pro.QAFAnnotationTransformer2" />

				<provider classname="com.qmetry.qaf.automation.testng.pro.QAFInvokedMethodListener2" />

				<provider classname="com.qmetry.qaf.automation.testng.pro.QAFMethodInterceptor" />

				<provider classname="com.qmetry.qaf.automation.testng.pro.QAFResultListener" />
				<provider classname="com.qmetry.qaf.automation.testng.pro.QAFSuiteListener" />
				<provider classname="com.qmetry.qaf.automation.testng.pro.QAFExecutionListener" />
			</service>
		</jar>

	</target>


	<target name="gendoc" depends="init" description="generate documentation">
		<delete dir="${dist.dir}/docs" />

		<mkdir dir="${dist.dir}/docs" />
		<javadoc access="protected" additionalparam="-Xdoclint:none" sourcepath="${src.dir}" packagenames="com.qmetry.**.*" destdir="${dist.dir}/docs"
			verbose="false" author="true" version="true" use="true" windowtitle="QMetry Automation Framework - ${version-num}.${build-num}" overview="${basedir}/QAF-Overview.htm">
			<doctitle>
				<![CDATA[<h1>QMetry Automation Framework - ${version-num}.${build-num}</h1>]]>
				</doctitle>
		<bottom>
			<![CDATA[<i>Copyright &#169; 2000 Infostretch Corp.</i>]]>
			</bottom>
	<classpath refid="build.classpath" />
	<tag name="Todo" scope="all" description="To do:" />
	<group title="qaf Properties" packages="com.qmetry.qaf.automation.keys*" />
	<group title="qaf Web Driver" packages="com.qmetry.qaf.automation.ui.*" />
	<group title="qaf Web Service" packages="com.qmetry.qaf.automation.ws.*" />
	<group title="qaf Test-Step" packages="com.qmetry.qaf.automation.step.*" />
</javadoc>
<!--<zip destfile="${dist.dir}/qaf-javadoc.jar" basedir="${dist.dir}/docs">
</zip>-->
<jar compress="true" destfile="${dist.dir}/qaf-javadoc.jar" basedir="${dist.dir}/docs" />
<!-- <delete dir="${dist.dir}/docs"> 
</delete>-->
</target>


<target name="test-compile" depends="init">
<taskdef classpathref="test.classpath" resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" />

<echo level="info">--- test compile (start) ---</echo>
<iajc source="${source}" target="${target}" showweaveinfo="true" verbose="true" destdir="${bin.dir}" debug="false">
	<inpath location="${src.dir}">
	</inpath>
	<sourceroots>
		<pathelement location="${test.src.dir}" />
	</sourceroots>
	<classpath refid="test.classpath">
	</classpath>
</iajc>
<echo level="info">--- test compile (finished) ---</echo>
</target>
<target name="test" depends="build, test-compile">
<taskdef resource="testngtasks" classpathref="test.classpath" />
<testng classpathref="test.classpath" workingDir="${test.dir}" outputDir="${test.dir}/test-results" haltOnFailure="true" verbose="2">
	<classpath location="${bin.dir}" />
	<xmlfileset dir="${test.dir}/config" includes="testrun_config.xml" />
	<sysproperty key="log4j.configuration" value="file:///${test.dir}/log4j.properties" />
	<sysproperty key="outputDir" value="test-results" />

</testng>
</target>
<target name="make-standalone-jar" depends="clean, compile" description="generate stand-alone jar">
<delete dir="dependencies" failonerror="false" />
<mkdir dir="dependencies" />
<!-- external libraries classpath, we don't need sources and javadoc -->
<ivy:retrieve pattern="dependencies/[artifact](-[classifier]).jar" conf="compile" />
<!-- 
<path id="build.classpath">
	<fileset dir="${basedir}/">
		<include name="${lib.dir}/*.jar" />
		<exclude name="${lib.dir}/*sources.jar" />
		<exclude name="${lib.dir}/*javadoc.jar" />
	</fileset>
</path>
-->
<jar destfile="${dist.dir}/qaf-standalone.jar" basedir="${bin.dir}" excludes="**/test/**,**/step/CommonStep.*" includes="**/*.*" duplicate="preserve">
	<zipgroupfileset dir="${lib.dir}" includes="*.jar" excludes="*sources.jar,*javadoc.jar" />
	<zipgroupfileset dir="dependencies" includes="*.jar" excludes="*sources.jar,*javadoc.jar" />

	<metainf dir="." includes="LICENSE.txt,NOTICE.txt" />
	<manifest>
		<attribute name="Vendor" value="Infostretch Corp." />
		<attribute name="Built-By" value="${user.name}" />

		<section name="Build-Info">
			<attribute name="qaf-Build-Time" value="${build.timestamp}" />
			<!-- Information about the program itself -->
			<attribute name="qaf-Version" value="${version-num}" />
			<attribute name="qaf-Revision" value="${build-num}" />
			<attribute name="qaf-Type" value="core" />
		</section>
	</manifest>
	<metainf dir="${src.dir}" includes="**/aop.xml" />
	<service type="org.testng.ITestNGListener">
		<provider classname="com.qmetry.qaf.automation.testng.pro.QAFAnnotationTransformer2" />

		<provider classname="com.qmetry.qaf.automation.testng.pro.QAFInvokedMethodListener2" />

		<provider classname="com.qmetry.qaf.automation.testng.pro.QAFMethodInterceptor" />

		<provider classname="com.qmetry.qaf.automation.testng.pro.QAFResultListener" />
		<provider classname="com.qmetry.qaf.automation.testng.pro.QAFSuiteListener" />
	</service>
</jar>
</target>
</project>
